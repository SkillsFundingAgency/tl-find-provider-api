parameters:
  - name: serviceConnection
    type: string
  - name: sharedEnvironmentId
    type: string
  - name: tableName
    type: string
    default: 'configuration'
  - name: environmentName
    type: string
  - name: ConfigurationSecrets
    type: object
    default: {}
jobs:
- job: GenerateConfigs
  variables:
    ConfigStorageAccountName:     $[ stageDependencies.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.outputs['DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.armOutputs.armOutput.ConfigStorageAccountName'] ]
    SqlConnectionString:          $[ dependencies.DeploySQLDatabase.outputs['SqlVariables.SqlConnectionString'] ]
    BlobStorageConnectionString : $[ dependencies.DeployfindproviderapiInfrastructure.outputs['armOutputs.armOutput.BlobStorageConnectionString'] ]
    RedisCacheConnectionString:   $[ stageDependencies.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.outputs['DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.armOutputs.armOutput.RedisConnectionString'] ]

  pool:
    name: 'Azure Pipelines'
    vmImage: 'windows-latest'
  dependsOn: 
    - DeployfindproviderapiInfrastructure
    - DeploySQLDatabase
  steps:
    - checkout: self
    - checkout: devopsTools
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'appdrop'
        downloadPath: '$(System.ArtifactsDirectory)'

    - task: AzurePowerShell@5
      displayName: 'Generate Configuration'
      inputs:
        azureSubscription: ${{ parameters.ServiceConnection }}
        ScriptType: 'FilePath'
        scriptPath: './operations-devops-tools/Powershell/GenerateConfig/New-ConfigurationTableEntry.ps1'
        scriptArguments:
          -SourcePath "$(System.ArtifactsDirectory)/appdrop/config"
          -TargetFilename "*.schema.json"
          -StorageAccountName "$(ConfigStorageAccountName)"
          -StorageAccountResourceGroup "$(SharedResourceGroup)"
          -EnvironmentName ${{ parameters.environmentName }}
          -TableName "Configuration"
        azurePowerShellVersion: LatestVersion
        pwsh: true
        FailOnStandardError: true
      env: ${{ parameters.ConfigurationSecrets }}