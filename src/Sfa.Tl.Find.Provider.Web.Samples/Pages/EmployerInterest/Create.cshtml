@page
@model CreateModel
@{
    ViewData["Title"] = "Register Employer Interest";
}

<div class="govuk-grid-row govuk-!-margin-top-7 tl-fap-home--container">
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-l govuk-!-margin-top-2 govuk-!-margin-bottom-7">Register Employer Interest</h1>

        <form novalidate id="tl-employer-interest-form">
            <div class="govuk-form-group">
                <fieldset class="govuk-fieldset">

                    <div class="govuk-form-group" sfa-validation-for="PrimaryContact" sfa-validationerror-class="govuk-form-group--error">
                        <label class="govuk-label">
                            Organisation name
                        </label>
                        <span class="govuk-error-message"></span>
                        <input class="govuk-input govuk-input--width-20" id="tl-organisation-name" type="text">
                    </div>

                    <div class="govuk-form-group" sfa-validation-for="PrimaryContact" sfa-validationerror-class="govuk-form-group--error">
                        <label class="govuk-label">
                            Contact name
                        </label>
                        <span class="govuk-error-message"></span>
                        <input class="govuk-input govuk-input--width-20" id="tl-contact-name" type="text">
                    </div>

                    <div class="govuk-form-group">
                        <label class="govuk-label">
                            Email
                        </label>
                        <span class="govuk-error-message"></span>
                        <input class="govuk-input govuk-input--width-20" id="tl-email" type="email">
                    </div>

                    <div class="govuk-form-group">
                        <label class="govuk-label">
                            Telephone
                        </label>
                        <span class="govuk-error-message"></span>
                        <input class="govuk-input govuk-input--width-20" id="tl-telephone" type="tel">
                    </div>

                    <div class="govuk-form-group">
                        <label class="govuk-label">
                            Postcode
                        </label>
                        <span class="govuk-error-message"></span>
                        <input class="govuk-input govuk-input--width-20" id="tl-postcode" type="text">
                    </div>

                    <div class="govuk-form-group">
                        <div class="govuk-checkboxes govuk-checkboxes--small">
                            <div class="govuk-checkboxes__item">
                                <label class="govuk-label govuk-checkboxes__label" for="tl-multiple-locations">
                                    Multiple locations? <strong><span id="tl-multiple-locations-value"></span></strong>
                                </label>
                                <input class="govuk-checkboxes__input" id="tl-multiple-locations" name="multiple-locations" type="checkbox">
                            </div>
                        </div>
                    </div>

                    <div class="govuk-form-group tl-hidden" id="tl-location-count-container">
                        <label class="govuk-label">
                            Location count
                        </label>
                        <span class="govuk-error-message"></span>
                        <input class="govuk-input govuk-input--width-20" id="tl-location-count" type="number">
                    </div>

                    <div class="govuk-form-group">
                        <label class="govuk-label">
                            Industry
                        </label>
                        <span class="govuk-error-message"></span>
                        <input class="govuk-input govuk-input--width-20" id="tl-industry" type="number">
                        <select class="govuk-select govuk-body-s" id="tl-industries" name="industries">
                            <option value="0">Loading...</option>
                        </select>
                    </div>

                    @* <div class="govuk-form-group">
                    <label class="govuk-label">
                    Contact preference (1=email, 2=telephone)
                    </label>
                    <span class="govuk-error-message"></span>
                    <input class="govuk-input govuk-input--width-20" id="tl-contact-preference" type="number">
                    </div>*@

                    <div class="govuk-form-group">
                        <fieldset class="govuk-fieldset">
                            <legend class="govuk-fieldset__legend govuk-fieldset__legend--m" id="PlacementsKnown" name="PlacementsKnown">
                                Contact preference
                            </legend>
                            @*<label><input type="radio" name="tl-contact-preference" id="tl-contact-preference-email" value="1" /> 1</label>
                            <br />
                            <label><input type="radio" name="tl-contact-preference" id="tl-contact-preference-telephone" value="2" /> 2</label>
                            <br />*@


                            <div id="tl-contact-preference-group" class="govuk-radios govuk-radios--conditional" data-module="radios">
                                <div class="govuk-radios__item">
                                    <input class="govuk-radios__input" name="tl-contact-preference" id="tl-contact-preference-email" type="radio" value="1">
                                    <label class="govuk-label govuk-radios__label" for="tl-contact-preference-email">
                                        Email
                                    </label>
                                </div>
                                <div class="govuk-radios__item">
                                    <input class="govuk-radios__input" name="tl-contact-preference" id="tl-contact-preference-telephone" type="radio" value="2">
                                    <label class="govuk-label govuk-radios__label" for="tl-contact-preference-telephone">
                                        Telephone
                                    </label>
                                </div>
                            </div>

                        </fieldset>
                    </div>

                    <div class="govuk-form-group">
                        <label class="govuk-label">
                            Specific requirements
                        </label>
                        <span class="govuk-error-message"></span>
                        <textarea maxlength="500" class="govuk-textarea govuk-js-character-count" id="tl-specific-requirements" rows="5" aria-describedby="Comment-info"></textarea>
                    </div>
                </fieldset>
            </div>

            <button type="submit" class="govuk-button" id="tl-confirm">Confirm and save opportunity</button>
            <button type="button" class="govuk-button--warning" id="tl-clear">Clear</button>
            <button type="button" class="govuk-button--warning" id="tl-clear-all">Clear all</button>
        </form>
    </div>
</div>

<div class="govuk-grid-row govuk-!-margin-top-7 tl-fap-home--container">
    <div class="govuk-grid-column-two-thirds">
        <p class="govuk-body">
            <a asp-page="/EmployerInterest/Confirm">Go to the confirmation page</a>
        </p>
    </div>
</div>

<!-- Hidden fields to pass parameters to script -->
<div>
    <input type="hidden" id="find_provider_api_uri" value=@Model.ApiUrl>
    <input type="hidden" id="find_provider_api_app_id" value=@Model.ApiAppId>
    <input type="hidden" id="find_provider_api_key" value=@Model.ApiKey>
</div>

@section Scripts {
    <script src="~/js/crypto.js"></script>

    @*<script src="~/js/employerInterest.js"
            data-findProviderApiUri="{{ settings.find_provider_api_uri }}"
            data-findProviderAppId="{{ settings.find_provider_api_app_id }}"
            data-findProviderApiKey="{{ settings.find_provider_api_api_key }}"
            asp-append-version="true">
    </script>*@

    <script>
        const employerInterestDataKey = 'employerInterestData';

        $(document).ready(function () {

            let findProviderApiUri = $('#find_provider_api_uri').val();
            if (findProviderApiUri !== null && findProviderApiUri.substr(-1) !== '/') findProviderApiUri += '/';

            const findProviderAppId = $('#find_provider_api_app_id').val();
            const findProviderApiKey = $('#find_provider_api_key').val();

            console.log('set findProviderApiUri = ' + findProviderApiUri);

            getIndustries();

            const dataItem = window.localStorage.getItem(employerInterestDataKey);
            if (dataItem) {
                console.log('have data');
                console.log(JSON.parse(dataItem));
                populateForm(JSON.parse(dataItem));
            }
            else {
                console.log("at start - checked is " + $('#tl-multiple-locations').prop('checked'));
                displayMultipleLocationsValue($('#tl-multiple-locations').prop('checked'));
            }

            $("#tl-industry").change(function () {
                console.log("tl-industry changed to " + $("#tl-industry").val());
                setSelectedIndustry();
            });

            $("#tl-industries").change(function () {
                const industryId = $("#tl-industries").val();
                console.log("tl-industries changed to " + industryId);
                $("#tl-industry").val(industryId);
            });

            $("#tl-multiple-locations").change(function () {
                if (this.checked) {
                    console.log('multiple locations checked');
                    $("#tl-location-count-container").removeClass("tl-hidden");
                }
                else {
                    console.log('multiple locations unchecked');
                    $("#tl-location-count-container").addClass("tl-hidden")
                }

                displayMultipleLocationsValue(this.checked);
            });

            function displayMultipleLocationsValue(checked) {
                //Workaround for check mark not appearing
                $("#tl-multiple-locations-value").text(checked ? "(Yes)" : "(No)");
            }

            $("#tl-employer-interest-form").submit(function () {
                submitEmployerInterest();
                return false;
            });

            $("#tl-clear").click(function () {
                console.log('clearing local storage item ' + employerInterestDataKey);
                localStorage.removeItem(employerInterestDataKey);
                clearForm();
                return false;
            });

            $("#tl-clear-all").click(function () {
                console.log('clearing all local storage');
                localStorage.clear();
                clearForm();
                return false;
            });

            function clearForm() {
                $("#tl-employer-interest-form").trigger("reset");
                console.log("after clear - checked is " + $('#tl-multiple-locations').prop('checked'));
                displayMultipleLocationsValue($('#tl-multiple-locations').prop('checked'));
            }

            function getIndustries() {
                const industriesUri = findProviderApiUri + "industries";
                $.ajax({
                    type: "GET",
                    url: industriesUri,
                    contentType: "application/json",
                    beforeSend: function (xhr) {
                        addHmacAuthHeader(xhr, industriesUri, findProviderAppId, findProviderApiKey);
                    }
                }).done(function (data) {
                    console.log("got industries");
                    console.log(data);
                    populateIndustries(data);
                }).fail(function (error) {
                    console.log('Call to get industries failed. ' + error);
                });
            }

            function populateForm(data) {
                $("#tl-organisation-name").val(data.organisationName);
                $("#tl-contact-name").val(data.contactName);
                $("#tl-email").val(data.email);
                $("#tl-telephone").val(data.telephone);
                $("#tl-postcode").val(data.postcode);
                $('#tl-multiple-locations').prop('checked', data.hasMultipleLocations);
                displayMultipleLocationsValue(data.hasMultipleLocations);
                $("#tl-location-count").val(data.locationCount);
                $("#tl-industry").val(data.industryId !== 0 ? data.industryId : "");
                $("#tl-specific-requirements").val(data.specificRequirements);
                $("input[name=tl-contact-preference][value='" + data.contactPreferenceType + "']").prop("checked", true);
                setSelectedIndustry();
            }

            function populateIndustries(data) {
                const select = $("#tl-industries");
                //select.find("option:not(:first)").remove();
                select.find("option").remove();
                $.each(data,
                    function (_, item) {
                        console.log("adding item " + item.name + ' - ' + item.id)
                        select.append(new Option(item.name, item.id));
                    });
                setSelectedIndustry();
            }

            function setSelectedIndustry() {
                console.log("current value of industry id = " + $("#tl-industry").val());
                const industryId = parseInt($("#tl-industry").val()) || 0;
                console.log("current industry id = " + industryId);
                console.log("number of items in dropdown : " + $('#input1 option').length);
                //TODO: if have values in dropdown, select the one with the same value as industryid
                var val1 = $('#tl-industries').find(":selected").val();
                var val2 = $('#tl-industries').val();
                console.log('tl-industries selected value ' + val1 + " - " + val2);
                //const select = $("#tl-industries");
                if (industryId) $("#tl-industries").val(industryId);
            }

            function submitEmployerInterest() {
                console.log('submitting...');
                console.log('Organisation:\t' + $("#tl-organisation-name").val());
                console.log('Contact:\t' + $("#tl-contact-name").val());
                console.log('Email:\t' + $("#tl-email").val());
                console.log('Telephone:\t' + $("#tl-telephone").val());
                console.log('Postcode:\t' + $("#tl-postcode").val());
                console.log('Multiple locations:\t' + $('#tl-multiple-locations').prop('checked'));
                console.log('Location count:\t' + $("#tl-location-count").val());
                console.log('Industry:\t' + $("#tl-industry").val());
                console.log('Specific requirements:\t' + $("#tl-specific-requirements").val());
                console.log('Contact preference:\t' + $('input[name=tl-contact-preference]:checked').val());

                const data = {
                    organisationName: $("#tl-organisation-name").val(),
                    contactName: $("#tl-contact-name").val(),
                    email: $("#tl-email").val(),
                    telephone: $("#tl-telephone").val(),
                    postcode: $("#tl-postcode").val(),
                    hasMultipleLocations: $('#tl-multiple-locations').prop('checked'),
                    locationCount: parseInt($("#tl-location-count").val()) || 0,
                    industryId: parseInt($("#tl-industry").val()) || 0,
                    specificRequirements: $("#tl-specific-requirements").val(),
                    contactPreferenceType: parseInt($('input[name=tl-contact-preference]:checked').val())
                };

                console.log(JSON.stringify(data));

                window.localStorage.setItem(employerInterestDataKey, JSON.stringify(data));

                window.location.href = './Confirm';
            }
        });

    </script>
}